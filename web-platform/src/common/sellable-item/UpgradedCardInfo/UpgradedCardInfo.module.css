@property --k {
  syntax: '<number>';
  initial-value: 0;
  inherits: false;
}

.level-up-label-style,
.level-up-label-style:after {
  --k: 0.35;
  position: relative;
  padding: 0;
  color: transparent;
  font-weight: var(--noi-font-weight-extra-bold);
  font-size: var(--noi-font-size-xl);
  font-style: italic;
  text-align: center;
  text-transform: uppercase;
  background: linear-gradient(
    60deg,
    hsl(calc(var(--k) * 360deg - 45deg), 95%, 65%),
    hsl(calc(var(--k) * 360deg + 45deg), 95%, 65%)
  );
  -webkit-background-clip: text;
  background-clip: text;
  margin-block-end: getRem(10);
  opacity: 1;
  animation: gradient-scroll 2000ms linear infinite alternate-reverse;
  place-self: center;
}

.level-up-label-style {
  &:after {
    position: absolute;
    filter: blur(10px) saturate(250%);
    content: 'Level Up';
    inset: 0;
  }

  .max-level &:after {
    --k: -0.4;

    content: 'Max Level';
  }

  .max-level & {
    --k: -0.4;
  }

  .new-streamer-card &:after {
    content: 'New';
  }
}

@keyframes gradient-scroll {
  to {
    --k: 0.8;
  }
}

.level-up-label {
  &.hide {
    opacity: 0;
  }

  .show & {
    animation: jumpIn 400ms 500ms ease-out forwards;
  }

  .show.skip-animation & {
    opacity: 1 !important;
    animation: none !important;
  }
}

.show.skip-animation {
  opacity: 1 !important;
  animation: none !important;
}

.description {
  color: var(--noi-color-gray-400);
  font-size: var(--noi-font-size-lg);
}

.level-up-details {
  opacity: 0;
  margin-block-start: getRem(16);

  .new-streamer-card & {
    visibility: hidden;
  }

  .show & {
    animation: fadeIn 1000ms 1000ms ease-out forwards;
  }

  .show.skip-animation & {
    opacity: 1 !important;
    animation: none !important;
  }
}

.level-up-details-label {
  display: flex;
  flex-wrap: wrap;
  align-items: baseline;
  justify-content: center;
  margin: var(--noi-spacing-2x) 0;
  font-weight: var(--noi-font-weight-bold);
  font-size: var(--noi-font-size-xl);

  .arrow-icon {
    color: var(--noi-color-gray-700);
    inline-size: getRem(36);
    block-size: getRem(16);
  }

  .previous-card-level {
    color: var(--noi-color-gray-700);
  }

  .current-card-level {
    color: var(--noi-color-light-main);
  }
}

.upgrade-changes {
  @mixin list-style-none;
  padding: 0;
  inline-size: getRem(128);
  border-block-start: 2px solid transparent;
  border-image: linear-gradient(
    90deg,
    transparent,
    var(--noi-color-light-main-transparent-40),
    transparent
  );
  border-image-slice: 1;
}

.change-row {
  display: flex;
  flex-wrap: nowrap;
  align-items: baseline;
  justify-content: space-between;
  padding: getRem(3) var(--noi-spacing-2x);
  letter-spacing: 0.02rem;

  &:first-of-type {
    border-radius: 4px 4px 0 0;
  }

  &:last-of-type {
    border-radius: 0 0 4px 4px;
    border-image: linear-gradient(
      90deg,
      transparent,
      var(--noi-color-light-main-transparent-70),
      transparent
    );
    border-image-slice: 1;
    margin-block-end: getRem(1);
    border-block-end: 2px solid transparent;
    margin-block-start: getRem(-6);
  }

  &:first-of-type:last-of-type {
    border-radius: 4px;
    margin-block-start: 0;
  }
}

.change-type-label {
  color: var(--noi-color-light-main);
  font-size: var(--noi-font-size-md);
  text-transform: uppercase;

  .show & {
    animation: slide-left 500ms 1000ms cubic-bezier(0.03, 0.72, 0.18, 0.99) forwards;
  }

  .show.skip-animation & {
    animation: none !important;
  }
}

.change-value-label {
  color: var(--noi-color-green-main);
  font-weight: var(--noi-font-weight-bold);
  font-size: var(--noi-font-size-lg);

  .show & {
    animation: slide-right 500ms 1000ms cubic-bezier(0.03, 0.73, 0.18, 0.99) forwards;
  }

  .show.skip-animation & {
    animation: none !important;
  }
}

.card-info {
  margin-block-start: getRem(-16);
  opacity: 0;

  &.show {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes jumpIn {
  0% {
    scale: 0.3;
    opacity: 0;
    animation-timing-function: ease-out;
  }

  50% {
    scale: 1.15;
    opacity: 1;
    animation-timing-function: ease-in-out;
  }

  100% {
    scale: 1;
    opacity: 1;
  }
}

@keyframes slide-left {
  from {
    transform: translateX(getRem(20));
  }

  to {
    transform: translateX(getRem(0));
  }
}

@keyframes slide-right {
  from {
    transform: translateX(getRem(-20));
  }

  to {
    transform: translateX(getRem(0));
  }
}
